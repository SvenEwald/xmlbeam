Auto Types 

 XMLBeam does not do data binding, but a data projection. However, there are three "automatic" types, which
 provide something similar to data binding.
 
%{toc|section=1|fromDepth=2|toDepth=2}

* XBAutoValue

 Sometimes you need getters and setters for a value. 
 The getter has an @XBRead annotation and the setter the @XBWrite with the same path.
 This way you can read a value from XML and write it back to the same place.
 The new type XBAutoValue is made to simplify this use case.

%{include|charset=UTF-8|highlight-theme=eclipse|show-gutter=false|snippet=#ProjectedValueRefCardExample|source=src/test/java/org/xmlbeam/refcards/XBAutoValueRefCardTest.java}
 
 All operations are applied to the XML DOM model automatically, hence the name.

* XBAutoList

 If you want to access multiple values in an XML sequence, use type XBAutoList.
 Changes to this list will be applies automatically to the underlying XML just like XBAutoValue. 

%{include|charset=UTF-8|highlight-theme=eclipse|show-gutter=false|snippet=#ProjectedListRefCardExample1|source=src/test/java/org/xmlbeam/refcards/XBAutoListRefCardTest.java}

 Just like XBAutoValue, all operations including structure changes are applied to the DOM automatically.
 An alternative to create an XBAutolist is to use the annotation @XBAuto instead of @XBRead:
 
%{include|charset=UTF-8|highlight-theme=eclipse|show-gutter=false|snippet=#ProjectedListRefCardExample2|source=src/test/java/org/xmlbeam/refcards/XBAutoListRefCardTest.java}
 

* XBAutoMap

%{include|charset=UTF-8|highlight-theme=eclipse|show-gutter=false|snippet=#ProjectedMapRefCardExample|source=src/test/java/org/xmlbeam/refcards/XBAutoMapRefCardTest.java}

 Just like XBAutoList, you may use the @XBAuto annotation with XBAutoMap. 
 Notice, that the map key must be of type String.
 
%{include|charset=UTF-8|highlight-theme=eclipse|show-gutter=false|snippet=#ProjectedMapRefCardExampleA|source=src/test/java/org/xmlbeam/refcards/XBAutoMapRefCardTest.java}

