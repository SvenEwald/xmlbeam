What are mixins and how does it work?

 Projections are dynamic proxy instances for the projection interfaces.
 Therefore it is not possible to add additional method implementations by simply extending them.
 There would be no way to get working instances.
 
* First approach: Delegator pattern 
 
 You may create delegating instances of the projection interfaces. 
 Implement your methods and delegate the projection methods to a projection obtained from a projector.
 
 [] 

 This works and is quite straightforward but has some drawbacks:
 
 * You would have to ensure that each instance of a projection will be wrapped in your delegator.
   This might be even more inconvenient when retaining collections of sub projections. 
    
 * You are writing glue code between your domain objects and the projections.
   XMLBeam is all about avoiding glue code.

* Second approach: Mixins

 Define a mixin interface with the methods you like to add to add to a projection and let your mixin class implement this interface.
 Instead of extending the projection interface, you let the projection interface extend your mixin interface.
 Then register the mixin in the projector to be used as implementation for your projection interface.