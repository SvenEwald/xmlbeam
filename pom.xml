<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xmlbeam</groupId>
	<artifactId>xmlprojector</artifactId>
	<version>0.1-SNAPSHOT</version>
	<name>XMLBeam</name>
	<description>
	A java library to create "projections" of XML-Data to Java (and back). A projection is a defined subset of XML elements or attributes in an XML DOM tree. In contrast to data binding the resulting Java API is much more stable. Requires at least Java6 and has no further runtime dependencies.
	</description>
	<inceptionYear>2012-12-21</inceptionYear>
	<url>http://xmlbeam.org</url>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Sven Ewald</name>
		</developer>
	</developers>
	<scm>
		<url>https://github.com/SvenEwald/xmlbeam.git</url>
	</scm>
	<ciManagement>
		<system>Jenkins</system>
	</ciManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<cobertura.aggregate>true</cobertura.aggregate>
		<java.version>1.6</java.version>
	</properties>
	<build>
		<testResources>
			<!-- Mapping test resource folders to test source folders. This way the 
				tutorials can be understood by looking at only one directory. -->
			<testResource>
				<directory>src/test/java</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<formats>
						<!-- <format>html</format> -->
						<format>xml</format>
					</formats>
					<instrumentation>
						<excludes>
							<exclude>**/*Exception.class</exclude>
							<exclude>**/*Error.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<!--  <version>1.7</version>
				-->
				<executions>
					<execution>
						<!-- The github readme file serves as introduction page for the site. 
							So we copy it to the site sources. -->
						<id>Copy github readme as site content</id>
						<phase>pre-site</phase>
						<configuration>
							<target>
								<copy file="README.md" tofile="src/site/apt/introduction.apt" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>Patch syntax highlighter css</id>
						<phase>post-site</phase>
						<configuration>
							<target>
								<copy file="src/site/shCoreEclipse.css" tofile="target/site/attached-includes/css" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					 
					<version>3.0</version>
					
					<dependencies>
						<!-- additional dependencies required by "source-class" implementations 
							are added here -->
						<dependency>
							<groupId>org.tinyjee.dim</groupId>
							<artifactId>doxia-include-macro</artifactId>
							<version>1.1</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	 <distributionManagement>
    <site>
      <id>xmlbeam.org</id>
      <url>file:/tmp</url>
    </site>
  </distributionManagement>
</project>