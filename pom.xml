<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>7</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.xmlbeam</groupId>
	<artifactId>xmlprojector</artifactId>
	<version>1.4.24</version>
	<name>XMLBeam Data Projector</name>
	<description>The coolest XML library for Java around. Define typesafe views (projections) to xml. Use XPath to read and write XML. Bind XML to Java collections. Requires at least Java6, supports Java8 features and has no further runtime dependencies.</description>
	<inceptionYear>2012-12-21</inceptionYear>
	<url>https://xmlbeam.org</url>
	
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Sven Ewald</name>
		</developer>
	</developers>
	<scm>
		<url>https://github.com/SvenEwald/xmlbeam.git</url>
	</scm>
	<ciManagement>
		<system>Jenkins and Codeship</system>
	</ciManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<cobertura.aggregate>true</cobertura.aggregate>
		<java.version>1.6</java.version>
		<!-- <additionalparam>-Xdoclint:none</additionalparam> -->
	</properties>
	<build>
		<testResources>
			<!-- Mapping test resource folders to test source folders. This way the 
				tutorials can be understood by looking at only one directory. -->
			<testResource>
				<directory>src/test/java</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<compilerArgument>-Xlint</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<formats>
						<format>html</format>
						<format>xml</format>
					</formats>
					<instrumentation>
						<excludes>
							<exclude>**/*Exception.class</exclude>
							<exclude>**/*Error.class</exclude>
							<exclude>**/duplex/JJTXParserState.class</exclude>
							<exclude>**/duplex/Node.class</exclude>
							<exclude>**/duplex/XParserTreeConstants.class</exclude>
							<exclude>**/duplex/XParserVisitor.class</exclude>
							<exclude>**/duplex/ParseException.class</exclude>
							<exclude>**/duplex/SimpleCharStream.class</exclude>
							<exclude>**/duplex/Token.class</exclude>
							<exclude>**/duplex/TokenMgrError.class</exclude>
							<exclude>**/duplex/XParser*.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
				<defaultManifestFile>target/srcbuild/MANIFEST.MF</defaultManifestFile>
				<useDefaultManifestFile>true</useDefaultManifestFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifestEntries>
							<Bundle-Version>${project.version}</Bundle-Version>
							<Bundle-Name>${project.name}</Bundle-Name>
							<Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
							<Export-Package>org.xmlbeam,org.xmlbeam.annotation,org.xmlbeam.config,org.xmlbeam.dom,org.xmlbeam.externalizer,org.xmlbeam.io,org.xmlbeam.types,org.xmlbeam.util,org.xmlbeam.evaluation,org.xmlbeam.exceptions</Export-Package>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<!-- <version>1.7</version> -->
				<executions>
<!--
					<execution>
						<id>Copy github readme as site content</id>
						<phase>pre-site</phase>
						<configuration>
							<tasks>
								<copy file="README.md" tofile="src/site/apt/introduction.apt" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
 -->					
					<execution>
					<id> apply version to src manifest</id>
						<phase>generate-sources</phase>
						<configuration>
							<tasks>
								<copy file="src/srcbuild/MANIFEST.MF"
									tofile="target/srcbuild/MANIFEST.MF"
									overwrite="true" />	
								<replaceregexp file="${basedir}/target/srcbuild/MANIFEST.MF"
									match="x.x.x" replace="${project.version}" byline="true" flags="g" />	
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>Patch syntax highlighter css, apply version</id>
						<phase>post-site</phase>
						<configuration>
							<tasks>
								<copy file="src/site/shCoreEclipse.css"
									tofile="target/site/attached-includes/css/shCoreEclipse.css"
									overwrite="true" />
								<replaceregexp file="${basedir}/target/site/download.html"
									match="x.x.x" replace="${project.version}" byline="true" flags="g" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-nodeps</artifactId>
						<version>1.6.5</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-apache-regexp</artifactId>
						<version>1.6.5</version>
					</dependency>
					<dependency>
						<artifactId>jakarta-regexp</artifactId>
						<groupId>jakarta-regexp</groupId>
						<version>1.4</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>javacc-maven-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>xpath</id>
						<goals>
							<goal>jjtree-javacc</goal>
						</goals>
						<configuration>
							<!-- <outputDirectory>${project.build.directory}/generated-sources</outputDirectory> -->
							<javadocFriendlyComments>true</javadocFriendlyComments>
							<lookAhead>2</lookAhead>
							<isStatic>false</isStatic>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.4</version>
					<dependencies>
						<!-- additional dependencies required by "source-class" implementations 
							are added here -->
						<dependency>
							<groupId>org.tinyjee.dim</groupId>
							<artifactId>doxia-include-macro</artifactId>
							<version>1.1</version>
						</dependency>
					</dependencies>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<distributionManagement>
		<site>
			<id>xmlbeam.org</id>
			<url>file:/tmp</url>
		</site>
		<repository>
			<id>bintray</id>
			<url>https://api.bintray.com/maven/svenewald/xmlbeam/xmlbeam</url>
		</repository>
		<snapshotRepository>
			<id>bintray-snapshots</id>
			<url>https://api.bintray.com/maven/svenewald/xmlbeam/xmlbeam</url>
		</snapshotRepository>
	</distributionManagement>
	<profiles>
		<profile>
			<id>doclint-java8-disable</id>
			<activation>
				<jdk>[1.8,)</jdk>
			</activation>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
						
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sign-artifacts</id>
			<activation>
				<property>
					<name>sign-artifacts</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
